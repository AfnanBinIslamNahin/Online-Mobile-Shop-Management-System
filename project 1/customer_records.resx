<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOXSURBVHhe7du5
        q9RQHMXxhxsqKmKhoKCihWvlLipa2Aku/4Gd2LhvWImNuLfaaKO1jY0b4q5oI2JhIWihIoK7uOD2PTCB
        n5fMvNzMTe6dcQ584L1JcpOcN5PJJPP6PDMB9/Abf2rwHWcxDEnkMPI2tGqXMRzRcxp5G1iHaxiBqHEL
        uIlLFXgMu55M9GeCW8BkVJH1sOuxriPaMyGFAiRaCbEKeOj8LldQ+8shVgH6fb/zmNT+TIhZgBK9hP4K
        mIHjOOnhEHSCZdOsACVqCa0KGIQXsNOLugubVgUo0UpoVcBo2Gk+3sLGLUDnBe65wlfYeUQHxqGoLP29
        BI7CTi/iJzbDxi3Ax05UliIHwTGY4mEU3KyCXY+PU6gsRQoIkYE4A30atOsrQtvYVjZBr7mnOT7Crqyq
        AnyibbDb1FYBU+HzWb/rClgBO1h/3AK24gPy5g1BY2+BTaUF6O2p6EtABzMd0e30KmgdI5Gl0gL2wUaD
        2+m2gCF4Bzu9CvqjaF1ZkilAWYZzcE9aQtHYWodNUgXESK8A2G3qFYDScQvQkd++Bl/CTq/qoqgPbYPd
        Jm1j3nznsQ4t4xbQbX7AvfbwT7q9AFmOpvkfCtA+No1bgHsQ7MRoH+w+9QpA0/QKgJ25VwBCR58a9+IB
        PjfcbzxmP+WFSlIFLMYr2HVYOolZhJBJpoDZcK8n5NFFj5kIlWQKuAU7ti69PWlwL8PdQKgkUcBc2HHf
        w56Rab3upbQ5CJEkCtgBO+52uNkJO882hEgSBRyEHde9qqPoMTuPlgmRJArYAzvuBrjZCDvPLoRIEgW4
        f1293U1HFt1Wd98elyJEkihgAB7Bjq27uxdwEd8aj2X0lRgtEyJJFKAsQZF7fZpHJ0yhkkwBylp8gl2H
        pWlrEDJJFaBMgr4a8wbZevTzCUxE6EQtQNffDuAO7C22zLOGvGlaRsuORzuJVoCeyq2e7kVpjNUomygF
        LIB7ZG+HxpqHMolSgL7Zbcf5hefIe6rn0bzuB6SrKJPaCxgHu/GvMQ2+0YmSls3G0Zhj4ZvaC9B7uB3j
        GMpGy9qxylwsqb2AEGNk8dr4JolegO7L7S5Jy9qxOrKAkDqiAL0F2jFCmg/f1F7AYNyGHScEXVPU2L6p
        vQBFG7oQKwPRWGV2XolSQErpFQC7T70C0DRuATovt9+z6UTaB7tPXgV0o5YFzELeQt2k3/uOR/AFeQt3
        Mu2T/kPNpK/vL8zX0LdOx0NCAAAAAElFTkSuQmCC
</value>
  </data>
</root>